// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
#include "gtest/gtest.h"
#include <libkyber.h>

namespace {
    uint8_t pk1[] = {
            0xbd, 0xfb, 0xa4, 0x08, 0x1b, 0x19, 0x4d, 0xe9, 0x63, 0x4b, 0x51, 0xc7, 0xbe, 0x54, 0x4b, 0x61,
            0x56, 0x09, 0x80, 0xf3, 0xfb, 0xe1, 0x3d, 0x29, 0x0b, 0xab, 0x4d, 0xce, 0x6a, 0x29, 0xd2, 0x29,
            0xbb, 0xa9, 0x8a, 0x28, 0x47, 0x1d, 0x80, 0xf5, 0xfa, 0x7c, 0x7a, 0x72, 0x26, 0x76, 0x3d, 0xfc,
            0x87, 0xb7, 0xab, 0x2c, 0x06, 0x79, 0x7f, 0xb9, 0x64, 0xc9, 0xca, 0x3e, 0x8c, 0xa9, 0x9b, 0x45,
            0xb5, 0x01, 0xb6, 0xc8, 0xe8, 0xd2, 0x19, 0x4a, 0x47, 0x73, 0x74, 0x4b, 0x15, 0x4d, 0x2b, 0xe1,
            0x4a, 0x09, 0x60, 0x1a, 0xf7, 0xbb, 0x04, 0xec, 0xb7, 0x6e, 0xb1, 0x73, 0x71, 0xcb, 0xda, 0xd5,
            0xe5, 0xd8, 0x14, 0x81, 0xd7, 0x9c, 0x72, 0x82, 0xf2, 0x6d, 0xcf, 0x1f, 0x01, 0x78, 0x44, 0x4d,
            0x83, 0xb4, 0x75, 0xb5, 0xb9, 0x8f, 0x2b, 0x3d, 0x67, 0x7e, 0x5c, 0xa8, 0x58, 0x1d, 0xd1, 0x62,
            0x84, 0x17, 0x11, 0x53, 0x77, 0x2d, 0x55, 0x7c, 0x9d, 0x3a, 0x31, 0x20, 0x24, 0xba, 0xed, 0xb0,
            0x0c, 0x5c, 0x7f, 0x98, 0x25, 0x9f, 0x77, 0x5e, 0xbf, 0x86, 0xbb, 0x17, 0x49, 0x19, 0x52, 0xbf,
            0x76, 0x0b, 0x56, 0xde, 0x3e, 0x8e, 0x88, 0x89, 0x90, 0xcb, 0x7d, 0x8d, 0x10, 0x88, 0x4a, 0x6e,
            0x19, 0x3d, 0x31, 0x0d, 0x9d, 0x27, 0x20, 0x47, 0x4c, 0xcd, 0xa4, 0xcb, 0xc7, 0xc1, 0x4f, 0xf0,
            0xb0, 0xfb, 0x67, 0x3a, 0x9f, 0x4c, 0x6e, 0x93, 0x68, 0xb1, 0xdd, 0x3e, 0x45, 0x65, 0x06, 0xdd,
            0xec, 0xae, 0x93, 0x5a, 0x27, 0x8d, 0x75, 0x81, 0x57, 0x14, 0xf9, 0x60, 0x98, 0x51, 0x74, 0xf8,
            0xfa, 0x96, 0x9b, 0x34, 0xdb, 0x8b, 0x58, 0xdd, 0xc8, 0x58, 0x3c, 0xe3, 0xaa, 0xb6, 0x4f, 0xc7,
            0x65, 0x90, 0x90, 0x1b, 0x5d, 0x10, 0x68, 0xde, 0x8c, 0xb0, 0xdc, 0x03, 0x85, 0x55, 0xef, 0xff,
            0x46, 0x00, 0x87, 0x81, 0x6b, 0x2b, 0x56, 0x45, 0xb1, 0x20, 0xf8, 0x11, 0x26, 0x1f, 0x32, 0x66,
            0x5b, 0x40, 0xa3, 0x02, 0x41, 0x2d, 0x07, 0xcf, 0x91, 0x7e, 0x3b, 0x97, 0x9a, 0x26, 0x8b, 0x25,
            0xf8, 0x34, 0x52, 0xf1, 0x65, 0xb9, 0x78, 0x2a, 0x93, 0x15, 0x4c, 0x49, 0x9e, 0x72, 0x69, 0xe4,
            0xd4, 0xea, 0x6e, 0x90, 0x4e, 0x69, 0xac, 0x51, 0x16, 0x0f, 0xc6, 0xb8, 0x3b, 0x71, 0xb1, 0x66,
            0xd0, 0xbf, 0x3a, 0xca, 0x5f, 0x95, 0x35, 0xe3, 0x12, 0xcf, 0xff, 0x42, 0x58, 0xf3, 0xa8, 0xac,
            0x9c, 0xd2, 0xee, 0x6a, 0x7c, 0xf2, 0x7f, 0x6f, 0x9d, 0x13, 0x7b, 0x1b, 0xdc, 0x85, 0x1d, 0xae,
            0x5c, 0x3a, 0xd1, 0xfb, 0xb2, 0x5e, 0xe6, 0x8e, 0x3a, 0x16, 0x72, 0x09, 0x36, 0xac, 0x4b, 0x6a,
            0x65, 0xdb, 0x81, 0xb0, 0x6a, 0x80, 0x1d, 0x5f, 0xdf, 0x07, 0xa3, 0x98, 0x77, 0x18, 0xde, 0x0d,
            0xc2, 0xa8, 0x7e, 0x4d, 0xb5, 0xd2, 0x41, 0x2b, 0x95, 0x0b, 0x0b, 0xbc, 0x20, 0xb1, 0x0d, 0xd3,
            0xe8, 0xcc, 0xa3, 0xd4, 0x65, 0xce, 0x97, 0xc6, 0x09, 0x89, 0xf3, 0x9e, 0x7f, 0x40, 0x4b, 0xa9,
            0x22, 0x78, 0x61, 0xe2, 0x68, 0x59, 0x4b, 0x59, 0xd2, 0x00, 0x80, 0x36, 0x05, 0x83, 0xf6, 0x38,
            0xed, 0x66, 0x8b, 0xa0, 0xdd, 0xa5, 0x4e, 0xf7, 0x13, 0x89, 0x31, 0x52, 0xf6, 0x01, 0x79, 0x97,
            0x9c, 0x04, 0x65, 0xe2, 0x12, 0x72, 0xec, 0xf3, 0xe1, 0x5f, 0x8f, 0xe8, 0x28, 0x31, 0xef, 0x71,
            0xf4, 0xde, 0xd3, 0x74, 0xf3, 0x8b, 0x3b, 0x39, 0x00, 0x99, 0x98, 0x3f, 0x87, 0xb3, 0x44, 0x54,
            0x0b, 0x88, 0xd8, 0x1d, 0x74, 0x1b, 0x95, 0x69, 0xf1, 0xd6, 0x4b, 0xe5, 0x05, 0xe1, 0xfd, 0x98,
            0xfa, 0x0e, 0x82, 0x29, 0x08, 0xf0, 0x5a, 0x5d, 0xf9, 0x0c, 0xb0, 0x02, 0x38, 0x0d, 0x65, 0x09,
            0x27, 0x41, 0x7b, 0x88, 0xf9, 0x13, 0x0b, 0xd3, 0xb8, 0x2e, 0x6f, 0xfb, 0x78, 0x17, 0x23, 0xe1,
            0x42, 0xce, 0x22, 0x25, 0x18, 0x98, 0x2a, 0x87, 0x7d, 0x3e, 0xb1, 0x75, 0x15, 0x18, 0x4c, 0xb8,
            0x3e, 0xdd, 0x81, 0xd6, 0xd4, 0xb8, 0xa5, 0x9c, 0xe7, 0x77, 0xeb, 0xf8, 0xb2, 0xa1, 0x5d, 0x93,
            0xad, 0xe5, 0x15, 0x63, 0xfa, 0x8e, 0x74, 0xa5, 0x67, 0x21, 0x85, 0x68, 0xc2, 0xff, 0x33, 0x85,
            0x5e, 0x71, 0x18, 0xca, 0x7c, 0xe1, 0xc0, 0x84, 0x93, 0xc6, 0x5a, 0xed, 0xd5, 0x65, 0x82, 0x99,
            0xe6, 0xa2, 0xf5, 0x86, 0x0b, 0x86, 0xb7, 0xd3, 0x54, 0x9c, 0xeb, 0xbb, 0x6a, 0x03, 0x63, 0x99,
            0x67, 0x55, 0x5e, 0x04, 0x55, 0xd0, 0x68, 0xfc, 0x5e, 0x35, 0xd7, 0x8b, 0xcc, 0xac, 0x6d, 0x85,
            0x4f, 0xdd, 0x32, 0x31, 0x4f, 0x55, 0x3f, 0x1c, 0xc7, 0x2f, 0x98, 0x32, 0xd8, 0xfa, 0x84, 0xea,
            0x85, 0x7f, 0x0b, 0x61, 0x72, 0xe6, 0x40, 0x0e, 0xce, 0xd2, 0xc2, 0x48, 0x00, 0x4d, 0xfa, 0x44,
            0x94, 0x39, 0xdd, 0x18, 0x70, 0xe3, 0xdc, 0x4e, 0x59, 0xa0, 0xe0, 0x70, 0xfa, 0x4a, 0x5d, 0x7a,
            0xbf, 0x06, 0xc5, 0x5f, 0x28, 0xd1, 0xad, 0xc9, 0x19, 0xb0, 0xca, 0xd0, 0x00, 0x66, 0x98, 0x69,
            0x0f, 0xa0, 0xa0, 0xcd, 0xec, 0x38, 0xad, 0x78, 0xcf, 0x6f, 0x0f, 0x85, 0x72, 0xf1, 0xf5, 0x7d,
            0xfd, 0xc9, 0xfb, 0x45, 0x4a, 0xa2, 0x59, 0x70, 0x72, 0x4e, 0x8d, 0xe2, 0xcb, 0xd1, 0xe4, 0xc4,
            0xa5, 0xd9, 0x44, 0xad, 0x38, 0xec, 0x9e, 0x72, 0x20, 0x82, 0x07, 0x70, 0xd4, 0x56, 0xc9, 0x1f,
            0x5e, 0xbc, 0x37, 0xd0, 0x53, 0xc1, 0x25, 0x81, 0x17, 0x74, 0x73, 0x64, 0x41, 0x0a, 0x48, 0x6b,
            0x8b, 0x2d, 0xee, 0x81, 0x0c, 0xd6, 0xa5, 0x76, 0x22, 0xe6, 0x2d, 0xd6, 0x37, 0x8f, 0xa2, 0x7c,
            0x59, 0x37, 0x95, 0xf8, 0x9d, 0x53, 0x3a, 0x49, 0xa6, 0xb2, 0xdc, 0xb9, 0x6f, 0x7a, 0xb1, 0x52,
            0xac, 0x18, 0xae, 0x7c, 0xee, 0x98, 0x38, 0x92, 0x76, 0xf5, 0xbd, 0x5b, 0xd6, 0xad, 0x8d, 0xb3,
            0xb8, 0x1b, 0xd6, 0xe2, 0x58, 0x20, 0xc0, 0x20, 0x0a, 0x93, 0x34, 0x73, 0x00, 0x3e, 0x01, 0xeb,
            0x4e, 0xc1, 0x31, 0xf4, 0x1d, 0x74, 0x59, 0xbb, 0xfa, 0xfe, 0x60, 0x5c, 0x8d, 0x46, 0x6f, 0x0d,
            0x6f, 0xb9, 0x48, 0xd9, 0xc6, 0x0e, 0x2f, 0xa5, 0xab, 0xd8, 0xc3, 0xa6, 0x62, 0xcb, 0x29, 0x69,
            0xb5, 0xe3, 0x2e, 0xcc, 0xfc, 0x2c, 0x7b, 0x1f, 0x9a, 0x7c, 0x66, 0xd6, 0xa6, 0x05, 0x40, 0xfe,
            0x29, 0xdc, 0x5c, 0xf4, 0xfa, 0x8a, 0x50, 0x39, 0xb5, 0xd1, 0xb5, 0xab, 0xac, 0x3e, 0xe8, 0xce,
            0xe1, 0x7a, 0x20, 0xdc, 0x41, 0x0e, 0x04, 0x8d, 0xac, 0x47, 0xd5, 0x03, 0x71, 0xae, 0x86, 0x92,
            0xc8, 0x6d, 0x7a, 0x1c, 0x60, 0x11, 0x0c, 0x6e, 0xa6, 0x1c, 0x29, 0x94, 0xa6, 0xc3, 0x01, 0x4a,
            0xac, 0x6b, 0x07, 0x85, 0xc1, 0xb2, 0xb6, 0x30, 0xce, 0x76, 0xcb, 0x0b, 0x41, 0x2f, 0x2d, 0x5f,
            0x7e, 0x1f, 0x01, 0x9f, 0x9a, 0x5e, 0x44, 0x35, 0x61, 0xb8, 0xc2, 0x5a, 0x41, 0x01, 0x7b, 0x6f,
            0xd9, 0x92, 0x35, 0xdc, 0xb0, 0xa2, 0xee, 0x4b, 0xf3, 0xfb, 0x0a, 0x73, 0xf3, 0x32, 0xe6, 0x7b,
            0x4c, 0x95, 0x3e, 0x6f, 0xdb, 0x6b, 0x64, 0x10, 0x6c, 0x49, 0x8d, 0x31, 0xa7, 0x50, 0xaf, 0xf7,
            0x55, 0x03, 0x22, 0xc5, 0x24, 0xd3, 0x73, 0x94, 0x79, 0x9d, 0xf8, 0x42, 0x71, 0xdd, 0x17, 0xc6,
            0xa0, 0x80, 0xb3, 0xa4, 0xad, 0x71, 0xa9, 0x41, 0x56, 0x57, 0x7a, 0x5a, 0x35, 0x38, 0x0d, 0x01,
            0x27, 0x09, 0x8a, 0x38, 0x13, 0x54, 0x8b, 0x9a, 0x3a, 0x7b, 0xd5, 0xe0, 0xec, 0xa9, 0x51, 0x1e,
            0x15, 0xcd, 0xa7, 0xc5, 0x58, 0x58, 0x87, 0xbb, 0xa6, 0xf3, 0x8f, 0x23, 0x0d, 0x52, 0x95, 0x87,
            0x57, 0x8f, 0x51, 0x43, 0xee, 0x04, 0x0c, 0xaf, 0xcc, 0x66, 0xe0, 0x04, 0x4a, 0x96, 0x8f, 0x17,
            0x96, 0x7e, 0xbd, 0x30, 0x07, 0x93, 0xb8, 0xde, 0xff, 0xd6, 0x0b, 0x9d, 0x83, 0xda, 0x33, 0xa4,
            0xf5, 0x8b, 0x8b, 0x9e, 0xc5, 0xf6, 0xf8, 0xaf, 0xce, 0x6a, 0x3f, 0xea, 0x2c, 0x7b, 0xa2, 0x4e
    };

    uint8_t ska_1[] = {
            0x29, 0x56, 0xa6, 0x22, 0x0b, 0x3c, 0x63, 0x33, 0x50, 0xe3, 0x86, 0x15, 0x0d, 0x1c, 0x40, 0x82,
            0xfc, 0x43, 0xa8, 0xc3, 0x6b, 0xcd, 0x48, 0x84, 0x63, 0xd2, 0xd8, 0xfa, 0x40, 0x77, 0xa2, 0x9b,
            0x80, 0xa5, 0xd6, 0x8e, 0xc9, 0xb6, 0x29, 0x0b, 0xf0, 0xbd, 0x0d, 0x01, 0xe2, 0xd4, 0xcd, 0xc5,
            0x38, 0x36, 0xc4, 0xe4, 0xf6, 0x24, 0xc0, 0xbe, 0x1f, 0x87, 0x9d, 0x17, 0x80, 0x5f, 0x36, 0x91,
            0x43, 0x70, 0x59, 0xf9, 0x3d, 0x62, 0x41, 0x9c, 0xb2, 0xeb, 0xdd, 0xa4, 0x50, 0xd2, 0xa9, 0xa4,
            0xac, 0x30, 0xef, 0x3c, 0xa4, 0xde, 0xf9, 0xce, 0x62, 0x8f, 0xc0, 0xbc, 0x2d, 0x87, 0x39, 0xac,
            0xb6, 0x26, 0x27, 0x13, 0x2c, 0x26, 0x74, 0xc8, 0x67, 0x09, 0x56, 0x44, 0xd9, 0x9f, 0x36, 0x6e,
            0x1a, 0x30, 0x05, 0xcc, 0x77, 0x78, 0xe9, 0x74, 0xc1, 0x5f, 0x49, 0x57, 0xf6, 0x90, 0x5a, 0x0c,
            0x22, 0x2f, 0x0b, 0xc9, 0x7e, 0xd9, 0x4e, 0x67, 0x82, 0xa7, 0x71, 0x17, 0xbb, 0x02, 0xea, 0xf8,
            0x98, 0xc9, 0xd8, 0x28, 0xb2, 0xb7, 0xba, 0x79, 0xc8, 0xd6, 0xf4, 0xc8, 0xa3, 0x6f, 0x4d, 0x1b,
            0xbd, 0x04, 0x88, 0xe9, 0x7c, 0xb7, 0x5b, 0xf7, 0x21, 0xc9, 0xa6, 0x50, 0xf9, 0x55, 0x67, 0x8c,
            0xb2, 0x90, 0x8a, 0xd8, 0xbc, 0x2c, 0xa5, 0xf1, 0x5d, 0x4f, 0x23, 0x87, 0x75, 0x7a, 0xc0, 0x7a,
            0xae, 0xeb, 0xac, 0xf1, 0xb2, 0xbc, 0x95, 0x61, 0x71, 0x70, 0xd7, 0x6c, 0xcb, 0x41, 0x6f, 0x12,
            0x21, 0xd3, 0xa8, 0x2b, 0x37, 0xfc, 0xb7, 0x5a, 0x4a, 0xa9, 0xc2, 0xfe, 0x87, 0xbb, 0x79, 0x76,
            0xea, 0xcc, 0x99, 0x41, 0x19, 0x15, 0x60, 0x46, 0x5f, 0x92, 0x4a, 0xc6, 0xe6, 0xb1, 0xa8, 0x97,
            0xaa, 0xab, 0x20, 0x39, 0x71, 0x54, 0xed, 0x3f, 0xc7, 0xae, 0x39, 0x34, 0xd0, 0x80, 0x95, 0x42,
            0xec, 0xca, 0x86, 0x8c, 0xd5, 0xa3, 0x4e, 0x5a, 0xbb, 0x10, 0xae, 0xcc, 0xf4, 0xe1, 0x49, 0xc6,
            0x5c, 0x93, 0x40, 0x59, 0xb4, 0xf2, 0x1f, 0xda, 0xbb, 0x82, 0x34, 0xf1, 0xf6, 0x96, 0xbc, 0xf1,
            0x47, 0x7b, 0x37, 0x58, 0xf7, 0xb8, 0xdb, 0xe1, 0x98, 0x99, 0x0d, 0xb6, 0x30, 0x69, 0x81, 0xcc,
            0xf4, 0x9a, 0x84, 0xa7, 0x71, 0xf7, 0xa0, 0x08, 0x7c, 0x76, 0xbe, 0x1d, 0x65, 0x1c, 0xa5, 0xcc,
            0xf2, 0xd4, 0x8e, 0xb9, 0xac, 0x25, 0x30, 0xba, 0xa8, 0x3b, 0xe3, 0x5b, 0x7a, 0x8b, 0xcd, 0x87,
            0x48, 0xb3, 0xbf, 0x00, 0xe4, 0x4d, 0x42, 0xa2, 0xc5, 0x6e, 0x00, 0x3b, 0x23, 0xf4, 0x0b, 0xaf,
            0x85, 0x18, 0xb7, 0x1b, 0x00, 0x3f, 0x96, 0x9f, 0xed, 0xaf, 0x33, 0x82, 0xcc, 0x15, 0x55, 0x5d,
            0xed, 0xad, 0x01, 0x17, 0xff, 0x16, 0xfe, 0xa3, 0x7c, 0x6a, 0xf7, 0xe0, 0xc1, 0xc5, 0x9c, 0x8b,
            0x98, 0xca, 0xca, 0x62, 0x2e, 0x28, 0xc8, 0x91, 0xae, 0x4b, 0x0c, 0x4d, 0x50, 0x0d, 0x29, 0xb1,
            0xb2, 0x54, 0x68, 0x0b, 0xc8, 0x5d, 0x4c, 0x4c, 0xa9, 0xf6, 0x3d, 0xca, 0x21, 0x28, 0x8e, 0x3a,
            0x10, 0x75, 0xcf, 0xac, 0x02, 0x30, 0xf5, 0x61, 0x82, 0x46, 0x32, 0x69, 0x03, 0xa4, 0xc9, 0x98,
            0x76, 0xe7, 0x96, 0x67, 0xca, 0x93, 0x6d, 0x35, 0x7a, 0xd2, 0x19, 0x46, 0x6f, 0xa4, 0x1b, 0xf4,
            0x01, 0xa7, 0x31, 0x5c, 0x9e, 0x01, 0x90, 0x11, 0xbc, 0x8d, 0xbd, 0x92, 0xc1, 0x9c, 0x4a, 0xec,
            0x24, 0xa0, 0x7a, 0x77, 0xed, 0xee, 0x08, 0x07, 0x12, 0xa3, 0x9e, 0xc7, 0x17, 0x2c, 0x3d, 0xd4,
            0x41, 0xc5, 0xe6, 0x5e, 0x10, 0xbc, 0x97, 0xc5, 0x6b, 0x9b, 0xe8, 0x10, 0xab, 0x51, 0x48, 0x80,
            0x23, 0xf0, 0x04, 0xcc, 0x97, 0x8c, 0x9b, 0x38, 0xb2, 0xda, 0x64, 0x1e, 0x37, 0x23, 0xfd, 0xe6,
            0x4a, 0xfc, 0x3e, 0x04, 0x1b, 0x82, 0x58, 0x13, 0x24, 0x50, 0x39, 0xc5, 0x4c, 0x4c, 0x4c, 0xe2,
            0xf4, 0x17, 0x34, 0x77, 0x79, 0xc5, 0x66, 0x64, 0x3d, 0x16, 0xf2, 0xc3, 0x71, 0x20, 0xc4, 0xbe,
            0x4b, 0x0d, 0x0a, 0x8c, 0x94, 0x3f, 0x95, 0x7b, 0x99, 0x22, 0xb8, 0x61, 0x5b, 0x4f, 0xdf, 0xb0,
            0xb2, 0xf5, 0x7c, 0xb8, 0x54, 0x00, 0x2b, 0x03, 0xb2, 0x7e, 0x9e, 0xc2, 0xde, 0x41, 0x67, 0x91,
            0x29, 0xca, 0x38, 0x6b, 0x9f, 0x64, 0x60, 0x51, 0x80, 0x53, 0x6e, 0x77, 0x14, 0x70, 0x2c, 0x1a,
            0x18, 0xa2, 0xd0, 0xd5, 0x86, 0x4d, 0x85, 0x96, 0x70, 0x7c, 0xc4, 0xf7, 0x6e, 0x86, 0x80, 0x20,
            0xd7, 0x96, 0x36, 0xf6, 0xc0, 0x21, 0xfe, 0x97, 0xc5, 0x91, 0xa7, 0x42, 0xfa, 0x63, 0x77, 0x2b,
            0x81, 0x72, 0x4a, 0xed, 0xc3, 0xee, 0x92, 0xc6, 0x99, 0xb9, 0x3e, 0x0f, 0xee, 0x4e, 0x4c, 0xdd,
            0xd4, 0xe8, 0xca, 0x3d, 0xdb, 0x11, 0x97, 0x46, 0xa9, 0x89, 0x83, 0xd3, 0x28, 0xa1, 0x74, 0xf2,
            0x95, 0xe7, 0xa8, 0x8f, 0x51, 0x2c, 0x7f, 0x76, 0xfb, 0xa8, 0xfd, 0x1b, 0x17, 0x3e, 0xd7, 0x57,
            0xb8, 0x2a, 0x5c, 0x60, 0xad, 0xf6, 0x0b, 0xf0, 0x20, 0x57, 0x8b, 0x03, 0xe1, 0x72, 0xef, 0xe1,
            0xed, 0x90, 0x6f, 0x2b, 0xac, 0x91, 0x7b, 0x01, 0x03, 0x50, 0x50, 0x33, 0xbc, 0xae, 0x67, 0x4c,
            0x7b, 0xfc, 0x13, 0xe0, 0xcd, 0xd9, 0x54, 0x81, 0xcc, 0x48, 0x1d, 0x98, 0x6e, 0xf6, 0xe9, 0xb3,
            0x13, 0xc9, 0x41, 0x9e, 0xe1, 0xea, 0xf3, 0xba, 0x87, 0xe5, 0xe9, 0x3e, 0x3c, 0x2c, 0x5e, 0xb6,
            0x0c, 0xfb, 0x17, 0x0a, 0x98, 0xbf, 0xd3, 0x24, 0x23, 0x3f, 0xf5, 0x90, 0x37, 0x5a, 0x10, 0xee,
            0x86, 0xcf, 0x05, 0xc2, 0x37, 0x2d, 0x36, 0xfb, 0x53, 0x47, 0x90, 0x56, 0x20, 0x76, 0xb1, 0x2e,
            0x10, 0x7d, 0x39, 0x9c, 0x0a, 0x9e, 0x15, 0x4f, 0x6f, 0xe3, 0xb1, 0xa3, 0xe7, 0x0e, 0x2a, 0x60,
            0x29, 0x00, 0x63, 0xdc, 0x91, 0x95, 0xbe, 0xf5, 0x02, 0x60, 0xf6, 0xfe, 0x48, 0xe2, 0xf8, 0x79,
            0xac, 0xea, 0x4b, 0x05, 0x39, 0xce, 0x4e, 0x19, 0x5e, 0xf5, 0x01, 0xd6, 0xd6, 0x69, 0xa0, 0xf3,
            0x6a, 0x8f, 0x55, 0xdf, 0x80, 0xa3, 0x45, 0x08, 0x1f, 0x7e, 0x1d, 0x71, 0xb3, 0x04, 0xd4, 0x18,
            0xb1, 0x9a, 0x71, 0x92, 0x6b, 0x68, 0xde, 0x62, 0x70, 0xa1, 0x73, 0xd0, 0x32, 0xff, 0xed, 0xac,
            0xfe, 0xe2, 0x96, 0xe6, 0x28, 0x19, 0x22, 0x90, 0xe3, 0x3d, 0x9a, 0xd7, 0xdf, 0x1a, 0xc8, 0x8e,
            0x73, 0xdf, 0xab, 0x88, 0xbc, 0x89, 0x34, 0xfe, 0xba, 0xef, 0xbc, 0x45, 0x94, 0x1e, 0x1c, 0xda,
            0x90, 0xff, 0x59, 0xbc, 0xc0, 0x32, 0xc1, 0xbe, 0xcc, 0xd6, 0x19, 0x4f, 0xb3, 0x6d, 0x61, 0xe9,
            0xee, 0x32, 0xe3, 0x06, 0xba, 0x09, 0xa7, 0xad, 0x3a, 0xcf, 0x84, 0x26, 0xbf, 0x04, 0xde, 0x69,
            0x78, 0x29, 0x9d, 0x15, 0x8c, 0x52, 0x48, 0xea, 0x0c, 0xb0, 0x4f, 0x6d, 0xc3, 0x19, 0xf3, 0xbc,
            0xf4, 0xfb, 0x64, 0xe6, 0x64, 0xe5, 0x95, 0x89, 0x0e, 0xf2, 0xfd, 0xd6, 0xca, 0x5c, 0xd5, 0x90,
            0x3b, 0x66, 0x62, 0x02, 0x53, 0x18, 0xab, 0x8b, 0xc4, 0x1a, 0x53, 0x4d, 0x8b, 0xa7, 0x19, 0xf9,
            0xc0, 0xa8, 0xe0, 0xda, 0x95, 0x2e, 0x32, 0x38, 0xb8, 0x02, 0x64, 0xd5, 0xba, 0x82, 0x4a, 0xfd,
            0xb7, 0x77, 0x3a, 0xf4, 0x97, 0xdc, 0x3c, 0x5f, 0x4e, 0xbc, 0x7e, 0xb6, 0x5f, 0x36, 0x36, 0x06,
            0xa1, 0x4a, 0x86, 0x6e, 0x3f, 0xd1, 0x9e, 0x73, 0x31, 0xa5, 0x57, 0x1f, 0x8a, 0xd2, 0xac, 0xfe,
            0xd1, 0x2f, 0xb2, 0x75, 0x49, 0xb6, 0xeb, 0x75, 0x9b, 0x14, 0xa8, 0xa9, 0xfd, 0x36, 0x10, 0x67,
            0xaa, 0x5a, 0x30, 0x54, 0x68, 0xfc, 0xfc, 0x57, 0x68, 0x71, 0xc3, 0x97, 0xe9, 0xba, 0x75, 0xdf,
            0x89, 0x85, 0x47, 0x69, 0x22, 0x94, 0x32, 0x93, 0xc8, 0xf1, 0x09, 0xe4, 0x16, 0xde, 0xb7, 0x49,
            0x78, 0x6c, 0x2e, 0xc6, 0xd4, 0x10, 0x40, 0x47, 0x9e, 0x6a, 0x16, 0xd3, 0x05, 0xa5, 0xb1, 0xe6,
            0xf5, 0x46, 0x27, 0x03, 0xf1, 0xaa, 0x8a, 0xae, 0x37, 0xba, 0xb3, 0x05, 0x6b, 0xe3, 0x29, 0x8c,
            0x99, 0xe4, 0xc9, 0x57, 0x87, 0x38, 0xa5, 0x07, 0x5b, 0x4f, 0xc7, 0xec, 0x4a, 0x01, 0x23, 0x6f,
            0xca, 0xb0, 0x4e, 0x66, 0x7a, 0x1d, 0xa8, 0x10, 0xa1, 0xe5, 0xc3, 0x59, 0x1c, 0x4a, 0x03, 0x21,
            0xc1, 0x0c, 0x76, 0x51, 0x1e, 0xb5, 0x44, 0xe0, 0x5d, 0x92, 0x64, 0x84, 0x30, 0x16, 0x67, 0x5d,
            0x33, 0x81, 0x62, 0x9a, 0x1e, 0x7e, 0x3b, 0xef, 0xa8, 0xe1, 0x51, 0x54, 0xb8, 0xb4, 0x85, 0xf9,
            0x1c, 0x3a, 0xd6, 0xc9, 0xa3, 0x08, 0x87, 0x22, 0x6b, 0x6e, 0x92, 0x86, 0x4c, 0x15, 0x62, 0xea,
            0x1a, 0x31, 0xbc, 0x76, 0x99, 0x77, 0x60, 0xcf, 0x3c, 0xf7, 0x72, 0x82, 0x45, 0xf1, 0xca, 0xea,
            0xb5, 0x2c, 0xa9, 0x75, 0x3c, 0x8d, 0x9f, 0x29, 0x0c, 0x62, 0x92, 0xe3, 0xe9, 0xb0, 0x43, 0xfc,
            0x5b, 0x1a, 0x93, 0xe4, 0xe4, 0xe5, 0x85, 0x12, 0x9e, 0xda, 0xc0, 0xdf, 0x80, 0xa8, 0x91, 0x94,
            0x29, 0x7d, 0x8b, 0xa3, 0x33, 0x70, 0xc8, 0xc7, 0xbc, 0xc2, 0xab, 0xaa, 0x9b, 0xd7, 0x3f, 0xca,
            0xd5, 0x8c, 0x55, 0x22, 0x82, 0x1b, 0xf0, 0x45, 0x24, 0x16, 0xab, 0x99, 0xfb, 0x9a, 0x3d, 0x65,
            0xbd, 0xfb, 0xa4, 0x08, 0x1b, 0x19, 0x4d, 0xe9, 0x63, 0x4b, 0x51, 0xc7, 0xbe, 0x54, 0x4b, 0x61,
            0x56, 0x09, 0x80, 0xf3, 0xfb, 0xe1, 0x3d, 0x29, 0x0b, 0xab, 0x4d, 0xce, 0x6a, 0x29, 0xd2, 0x29,
            0xbb, 0xa9, 0x8a, 0x28, 0x47, 0x1d, 0x80, 0xf5, 0xfa, 0x7c, 0x7a, 0x72, 0x26, 0x76, 0x3d, 0xfc,
            0x87, 0xb7, 0xab, 0x2c, 0x06, 0x79, 0x7f, 0xb9, 0x64, 0xc9, 0xca, 0x3e, 0x8c, 0xa9, 0x9b, 0x45,
            0xb5, 0x01, 0xb6, 0xc8, 0xe8, 0xd2, 0x19, 0x4a, 0x47, 0x73, 0x74, 0x4b, 0x15, 0x4d, 0x2b, 0xe1,
            0x4a, 0x09, 0x60, 0x1a, 0xf7, 0xbb, 0x04, 0xec, 0xb7, 0x6e, 0xb1, 0x73, 0x71, 0xcb, 0xda, 0xd5,
            0xe5, 0xd8, 0x14, 0x81, 0xd7, 0x9c, 0x72, 0x82, 0xf2, 0x6d, 0xcf, 0x1f, 0x01, 0x78, 0x44, 0x4d,
            0x83, 0xb4, 0x75, 0xb5, 0xb9, 0x8f, 0x2b, 0x3d, 0x67, 0x7e, 0x5c, 0xa8, 0x58, 0x1d, 0xd1, 0x62,
            0x84, 0x17, 0x11, 0x53, 0x77, 0x2d, 0x55, 0x7c, 0x9d, 0x3a, 0x31, 0x20, 0x24, 0xba, 0xed, 0xb0,
            0x0c, 0x5c, 0x7f, 0x98, 0x25, 0x9f, 0x77, 0x5e, 0xbf, 0x86, 0xbb, 0x17, 0x49, 0x19, 0x52, 0xbf,
            0x76, 0x0b, 0x56, 0xde, 0x3e, 0x8e, 0x88, 0x89, 0x90, 0xcb, 0x7d, 0x8d, 0x10, 0x88, 0x4a, 0x6e,
            0x19, 0x3d, 0x31, 0x0d, 0x9d, 0x27, 0x20, 0x47, 0x4c, 0xcd, 0xa4, 0xcb, 0xc7, 0xc1, 0x4f, 0xf0,
            0xb0, 0xfb, 0x67, 0x3a, 0x9f, 0x4c, 0x6e, 0x93, 0x68, 0xb1, 0xdd, 0x3e, 0x45, 0x65, 0x06, 0xdd,
            0xec, 0xae, 0x93, 0x5a, 0x27, 0x8d, 0x75, 0x81, 0x57, 0x14, 0xf9, 0x60, 0x98, 0x51, 0x74, 0xf8,
            0xfa, 0x96, 0x9b, 0x34, 0xdb, 0x8b, 0x58, 0xdd, 0xc8, 0x58, 0x3c, 0xe3, 0xaa, 0xb6, 0x4f, 0xc7,
            0x65, 0x90, 0x90, 0x1b, 0x5d, 0x10, 0x68, 0xde, 0x8c, 0xb0, 0xdc, 0x03, 0x85, 0x55, 0xef, 0xff,
            0x46, 0x00, 0x87, 0x81, 0x6b, 0x2b, 0x56, 0x45, 0xb1, 0x20, 0xf8, 0x11, 0x26, 0x1f, 0x32, 0x66,
            0x5b, 0x40, 0xa3, 0x02, 0x41, 0x2d, 0x07, 0xcf, 0x91, 0x7e, 0x3b, 0x97, 0x9a, 0x26, 0x8b, 0x25,
            0xf8, 0x34, 0x52, 0xf1, 0x65, 0xb9, 0x78, 0x2a, 0x93, 0x15, 0x4c, 0x49, 0x9e, 0x72, 0x69, 0xe4,
            0xd4, 0xea, 0x6e, 0x90, 0x4e, 0x69, 0xac, 0x51, 0x16, 0x0f, 0xc6, 0xb8, 0x3b, 0x71, 0xb1, 0x66,
            0xd0, 0xbf, 0x3a, 0xca, 0x5f, 0x95, 0x35, 0xe3, 0x12, 0xcf, 0xff, 0x42, 0x58, 0xf3, 0xa8, 0xac,
            0x9c, 0xd2, 0xee, 0x6a, 0x7c, 0xf2, 0x7f, 0x6f, 0x9d, 0x13, 0x7b, 0x1b, 0xdc, 0x85, 0x1d, 0xae,
            0x5c, 0x3a, 0xd1, 0xfb, 0xb2, 0x5e, 0xe6, 0x8e, 0x3a, 0x16, 0x72, 0x09, 0x36, 0xac, 0x4b, 0x6a,
            0x65, 0xdb, 0x81, 0xb0, 0x6a, 0x80, 0x1d, 0x5f, 0xdf, 0x07, 0xa3, 0x98, 0x77, 0x18, 0xde, 0x0d,
            0xc2, 0xa8, 0x7e, 0x4d, 0xb5, 0xd2, 0x41, 0x2b, 0x95, 0x0b, 0x0b, 0xbc, 0x20, 0xb1, 0x0d, 0xd3,
            0xe8, 0xcc, 0xa3, 0xd4, 0x65, 0xce, 0x97, 0xc6, 0x09, 0x89, 0xf3, 0x9e, 0x7f, 0x40, 0x4b, 0xa9,
            0x22, 0x78, 0x61, 0xe2, 0x68, 0x59, 0x4b, 0x59, 0xd2, 0x00, 0x80, 0x36, 0x05, 0x83, 0xf6, 0x38,
            0xed, 0x66, 0x8b, 0xa0, 0xdd, 0xa5, 0x4e, 0xf7, 0x13, 0x89, 0x31, 0x52, 0xf6, 0x01, 0x79, 0x97,
            0x9c, 0x04, 0x65, 0xe2, 0x12, 0x72, 0xec, 0xf3, 0xe1, 0x5f, 0x8f, 0xe8, 0x28, 0x31, 0xef, 0x71,
            0xf4, 0xde, 0xd3, 0x74, 0xf3, 0x8b, 0x3b, 0x39, 0x00, 0x99, 0x98, 0x3f, 0x87, 0xb3, 0x44, 0x54,
            0x0b, 0x88, 0xd8, 0x1d, 0x74, 0x1b, 0x95, 0x69, 0xf1, 0xd6, 0x4b, 0xe5, 0x05, 0xe1, 0xfd, 0x98,
            0xfa, 0x0e, 0x82, 0x29, 0x08, 0xf0, 0x5a, 0x5d, 0xf9, 0x0c, 0xb0, 0x02, 0x38, 0x0d, 0x65, 0x09,
            0x27, 0x41, 0x7b, 0x88, 0xf9, 0x13, 0x0b, 0xd3, 0xb8, 0x2e, 0x6f, 0xfb, 0x78, 0x17, 0x23, 0xe1,
            0x42, 0xce, 0x22, 0x25, 0x18, 0x98, 0x2a, 0x87, 0x7d, 0x3e, 0xb1, 0x75, 0x15, 0x18, 0x4c, 0xb8,
            0x3e, 0xdd, 0x81, 0xd6, 0xd4, 0xb8, 0xa5, 0x9c, 0xe7, 0x77, 0xeb, 0xf8, 0xb2, 0xa1, 0x5d, 0x93,
            0xad, 0xe5, 0x15, 0x63, 0xfa, 0x8e, 0x74, 0xa5, 0x67, 0x21, 0x85, 0x68, 0xc2, 0xff, 0x33, 0x85,
            0x5e, 0x71, 0x18, 0xca, 0x7c, 0xe1, 0xc0, 0x84, 0x93, 0xc6, 0x5a, 0xed, 0xd5, 0x65, 0x82, 0x99,
            0xe6, 0xa2, 0xf5, 0x86, 0x0b, 0x86, 0xb7, 0xd3, 0x54, 0x9c, 0xeb, 0xbb, 0x6a, 0x03, 0x63, 0x99,
            0x67, 0x55, 0x5e, 0x04, 0x55, 0xd0, 0x68, 0xfc, 0x5e, 0x35, 0xd7, 0x8b, 0xcc, 0xac, 0x6d, 0x85,
            0x4f, 0xdd, 0x32, 0x31, 0x4f, 0x55, 0x3f, 0x1c, 0xc7, 0x2f, 0x98, 0x32, 0xd8, 0xfa, 0x84, 0xea,
            0x85, 0x7f, 0x0b, 0x61, 0x72, 0xe6, 0x40, 0x0e, 0xce, 0xd2, 0xc2, 0x48, 0x00, 0x4d, 0xfa, 0x44,
            0x94, 0x39, 0xdd, 0x18, 0x70, 0xe3, 0xdc, 0x4e, 0x59, 0xa0, 0xe0, 0x70, 0xfa, 0x4a, 0x5d, 0x7a,
            0xbf, 0x06, 0xc5, 0x5f, 0x28, 0xd1, 0xad, 0xc9, 0x19, 0xb0, 0xca, 0xd0, 0x00, 0x66, 0x98, 0x69,
            0x0f, 0xa0, 0xa0, 0xcd, 0xec, 0x38, 0xad, 0x78, 0xcf, 0x6f, 0x0f, 0x85, 0x72, 0xf1, 0xf5, 0x7d,
            0xfd, 0xc9, 0xfb, 0x45, 0x4a, 0xa2, 0x59, 0x70, 0x72, 0x4e, 0x8d, 0xe2, 0xcb, 0xd1, 0xe4, 0xc4,
            0xa5, 0xd9, 0x44, 0xad, 0x38, 0xec, 0x9e, 0x72, 0x20, 0x82, 0x07, 0x70, 0xd4, 0x56, 0xc9, 0x1f,
            0x5e, 0xbc, 0x37, 0xd0, 0x53, 0xc1, 0x25, 0x81, 0x17, 0x74, 0x73, 0x64, 0x41, 0x0a, 0x48, 0x6b,
            0x8b, 0x2d, 0xee, 0x81, 0x0c, 0xd6, 0xa5, 0x76, 0x22, 0xe6, 0x2d, 0xd6, 0x37, 0x8f, 0xa2, 0x7c,
            0x59, 0x37, 0x95, 0xf8, 0x9d, 0x53, 0x3a, 0x49, 0xa6, 0xb2, 0xdc, 0xb9, 0x6f, 0x7a, 0xb1, 0x52,
            0xac, 0x18, 0xae, 0x7c, 0xee, 0x98, 0x38, 0x92, 0x76, 0xf5, 0xbd, 0x5b, 0xd6, 0xad, 0x8d, 0xb3,
            0xb8, 0x1b, 0xd6, 0xe2, 0x58, 0x20, 0xc0, 0x20, 0x0a, 0x93, 0x34, 0x73, 0x00, 0x3e, 0x01, 0xeb,
            0x4e, 0xc1, 0x31, 0xf4, 0x1d, 0x74, 0x59, 0xbb, 0xfa, 0xfe, 0x60, 0x5c, 0x8d, 0x46, 0x6f, 0x0d,
            0x6f, 0xb9, 0x48, 0xd9, 0xc6, 0x0e, 0x2f, 0xa5, 0xab, 0xd8, 0xc3, 0xa6, 0x62, 0xcb, 0x29, 0x69,
            0xb5, 0xe3, 0x2e, 0xcc, 0xfc, 0x2c, 0x7b, 0x1f, 0x9a, 0x7c, 0x66, 0xd6, 0xa6, 0x05, 0x40, 0xfe,
            0x29, 0xdc, 0x5c, 0xf4, 0xfa, 0x8a, 0x50, 0x39, 0xb5, 0xd1, 0xb5, 0xab, 0xac, 0x3e, 0xe8, 0xce,
            0xe1, 0x7a, 0x20, 0xdc, 0x41, 0x0e, 0x04, 0x8d, 0xac, 0x47, 0xd5, 0x03, 0x71, 0xae, 0x86, 0x92,
            0xc8, 0x6d, 0x7a, 0x1c, 0x60, 0x11, 0x0c, 0x6e, 0xa6, 0x1c, 0x29, 0x94, 0xa6, 0xc3, 0x01, 0x4a,
            0xac, 0x6b, 0x07, 0x85, 0xc1, 0xb2, 0xb6, 0x30, 0xce, 0x76, 0xcb, 0x0b, 0x41, 0x2f, 0x2d, 0x5f,
            0x7e, 0x1f, 0x01, 0x9f, 0x9a, 0x5e, 0x44, 0x35, 0x61, 0xb8, 0xc2, 0x5a, 0x41, 0x01, 0x7b, 0x6f,
            0xd9, 0x92, 0x35, 0xdc, 0xb0, 0xa2, 0xee, 0x4b, 0xf3, 0xfb, 0x0a, 0x73, 0xf3, 0x32, 0xe6, 0x7b,
            0x4c, 0x95, 0x3e, 0x6f, 0xdb, 0x6b, 0x64, 0x10, 0x6c, 0x49, 0x8d, 0x31, 0xa7, 0x50, 0xaf, 0xf7,
            0x55, 0x03, 0x22, 0xc5, 0x24, 0xd3, 0x73, 0x94, 0x79, 0x9d, 0xf8, 0x42, 0x71, 0xdd, 0x17, 0xc6,
            0xa0, 0x80, 0xb3, 0xa4, 0xad, 0x71, 0xa9, 0x41, 0x56, 0x57, 0x7a, 0x5a, 0x35, 0x38, 0x0d, 0x01,
            0x27, 0x09, 0x8a, 0x38, 0x13, 0x54, 0x8b, 0x9a, 0x3a, 0x7b, 0xd5, 0xe0, 0xec, 0xa9, 0x51, 0x1e,
            0x15, 0xcd, 0xa7, 0xc5, 0x58, 0x58, 0x87, 0xbb, 0xa6, 0xf3, 0x8f, 0x23, 0x0d, 0x52, 0x95, 0x87,
            0x57, 0x8f, 0x51, 0x43, 0xee, 0x04, 0x0c, 0xaf, 0xcc, 0x66, 0xe0, 0x04, 0x4a, 0x96, 0x8f, 0x17,
            0x96, 0x7e, 0xbd, 0x30, 0x07, 0x93, 0xb8, 0xde, 0xff, 0xd6, 0x0b, 0x9d, 0x83, 0xda, 0x33, 0xa4,
            0xf5, 0x8b, 0x8b, 0x9e, 0xc5, 0xf6, 0xf8, 0xaf, 0xce, 0x6a, 0x3f, 0xea, 0x2c, 0x7b, 0xa2, 0x4e,
            0x42, 0x5e, 0xa3, 0xd3, 0x30, 0xc3, 0xc4, 0x20, 0x1f, 0x22, 0xd9, 0xae, 0x30, 0xd8, 0x48, 0x7c,
            0xb7, 0x2b, 0xa4, 0xa6, 0x1a, 0xd3, 0x95, 0x12, 0x54, 0x88, 0xb7, 0x15, 0xe0, 0x60, 0x7f, 0xe5,
            0xd0, 0x2f, 0x76, 0xed, 0x61, 0xf2, 0x20, 0xd5, 0x46, 0x14, 0x1b, 0xc2, 0x24, 0x48, 0x37, 0x53,
            0x9a, 0x7e, 0xe5, 0x1f, 0x81, 0x0e, 0xc3, 0x38, 0x6d, 0xf6, 0x95, 0xd5, 0x22, 0x41, 0xe7, 0x2d
    };

    uint8_t keyb_1[] = {
            0x75, 0x3a, 0x0c, 0x54, 0x47, 0x01, 0xaf, 0xb4, 0x10, 0xcd, 0x37, 0x1d, 0x36, 0xa5, 0xd3, 0xdc,
            0xe0, 0x37, 0xae, 0x43, 0xe2, 0xd4, 0x71, 0xcb, 0x8d, 0x6c, 0x9b, 0x9f, 0x95, 0x00, 0xe8, 0x47
    };

    TEST(KyberReferenceTest, decode) {
        // Verify constants for 768
        EXPECT_EQ(1088, KYBER_PUBLICKEYBYTES);
        EXPECT_EQ(1152, KYBER_CIPHERTEXTBYTES);
        EXPECT_EQ(2400, KYBER_SECRETKEYBYTES);

        // Based on reference implementation
        std::vector<uint8_t> key_a(KYBER_SYMBYTES, 0);
        std::vector<uint8_t> send_b(KYBER_CIPHERTEXTBYTES, 0);
        std::vector<uint8_t> sk_a(KYBER_SECRETKEYBYTES, 0);

        std::vector<uint8_t> expected_key_a = {
                160, 158, 123, 88, 195, 221, 144, 132,
                239, 112, 79, 27, 129, 240, 212, 8,
                26, 81, 138, 214, 114, 135, 124, 174,
                183, 114, 186, 220, 103, 23, 227, 88
        };

        //Alice uses Bobs response to get her secret key
        crypto_kem_dec(key_a.data(), send_b.data(), sk_a.data());

        for (int i = 0; i < KYBER_SYMBYTES; i++) {
            EXPECT_EQ(expected_key_a[i], key_a[i]);
        }
    }

    TEST(KyberReferenceTest, encode_decode) {
        // Verify constants for 768
        EXPECT_EQ(1088, KYBER_PUBLICKEYBYTES);
        EXPECT_EQ(1152, KYBER_CIPHERTEXTBYTES);
        EXPECT_EQ(2400, KYBER_SECRETKEYBYTES);

        // Based on reference implementation
        std::vector<uint8_t> pk(KYBER_PUBLICKEYBYTES, 0);
        std::vector<uint8_t> sk_a(KYBER_SECRETKEYBYTES, 0);

        std::vector<uint8_t> key_a(KYBER_SYMBYTES);
        std::vector<uint8_t> key_b(KYBER_SYMBYTES);
        std::vector<uint8_t> send_b(KYBER_CIPHERTEXTBYTES);

        //Alice generates a public key
        crypto_kem_keypair(pk.data(), sk_a.data());

        //Bob derives a secret key and creates a response
        crypto_kem_enc(send_b.data(),
                       key_b.data(),
                       pk.data());

        //Alice uses Bobs response to get her secret key
        auto validation_error = crypto_kem_dec(key_a.data(),
                                               send_b.data(),
                                               sk_a.data());

        EXPECT_EQ(0, validation_error);

        if (!validation_error)
        {
            for (int i = 0; i < KYBER_SYMBYTES; i++) {
                std::cout << i << std::endl;
                EXPECT_EQ(key_a[i], key_b[i]);
            }
        }
    }

    TEST(KyberReferenceTest, original)
    {
        unsigned char key_a[KYBER_SYMBYTES], key_b[KYBER_SYMBYTES];
        unsigned char pk[KYBER_PUBLICKEYBYTES];
        unsigned char sendb[KYBER_CIPHERTEXTBYTES];
        unsigned char sk_a[KYBER_SECRETKEYBYTES];

        //Alice generates a public key
        crypto_kem_keypair(pk, sk_a);

        //Bob derives a secret key and creates a response
        crypto_kem_enc(sendb, key_b, pk);

        //Alice uses Bobs response to get her secret key
        auto validation_error =  crypto_kem_dec(key_a, sendb, sk_a);
        EXPECT_EQ(0, validation_error);

        if(memcmp(key_a, key_b, KYBER_SYMBYTES))
            printf("ERROR keys\n");
    }

    TEST(KyberReferenceTest, original2)
    {
        unsigned char key_a[KYBER_SYMBYTES], key_b[KYBER_SYMBYTES];
        unsigned char sendb[KYBER_CIPHERTEXTBYTES];

        memset(key_b, 0, KYBER_SYMBYTES);

        for (int j = 0; j < KYBER_SYMBYTES; j++) {
            printf("0x%02x, ", key_b[j]);
            if ((j+1)%16==0)
                printf("\n");
        }

        //Bob derives a secret key and creates a response
        crypto_kem_enc(sendb, key_b, pk1);

        for (int j = 0; j < KYBER_SYMBYTES; j++) {
            printf("0x%02x, ", key_b[j]);
            if ((j+1)%16==0)
                printf("\n");
        }

        //Alice uses Bobs response to get her secret key
        auto validation_error =  crypto_kem_dec(key_a, sendb, ska_1);
        EXPECT_EQ(0, validation_error);

        if(memcmp(key_a, key_b, KYBER_SYMBYTES))
            printf("ERROR keys\n");
    }

}
